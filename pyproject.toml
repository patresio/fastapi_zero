[project]
name = 'fastapi-zero'
version = '0.1.0'
description = ''
authors = [
    {name = 'Ricardo Luis Barbosa Pereira',email = 'patresio@gmail.com'}
]
readme = 'README.md'
requires-python = '>=3.13,<4.0'
dependencies = [
    'fastapi[standard] (>=0.115.12,<0.116.0)',
    "sqlalchemy[asyncio] (>=2.0.41,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "alembic (>=1.16.1,<2.0.0)",
    "pwdlib[argon2] (>=0.2.1,<0.3.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "aiosqlite (>=0.21.0,<0.22.0)"
]


[build-system]
requires = ['poetry-core>=2.0.0,<3.0.0']
build-backend = 'poetry.core.masonry.api'

[tool.poetry.group.dev.dependencies]
pytest = '^8.4.0'
pytest-cov = '^6.1.1'
taskipy = '^1.14.1'
ruff = '^0.11.13'
pre-commit = "3.7.1"
pytest-asyncio = "^1.0.0"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = [
    "F",    # Pyflakes (erros de lógica)
    "E",    # pycodestyle (erros de estilo)
    "W",    # pycodestyle (avisos de estilo)
    "I",    # isort (organização de imports)
    "UP",   # pyupgrade (sugestões para modernizar o código)
    "PL",   # Pylint (muitas checagens de boas práticas)
    "PT",   # flake8-pytest-style (boas práticas para testes)
    "N",    # pep8-naming (validação de nomes de variáveis e funções)
]

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = '.'
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scoope = 'function'

[tool.coverage.run]
concurrency = ['thread', 'greenlet']

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fastapi_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fastapi_zero -vv'
post_test = 'coverage html'
